import itertools

def calculate(a, b, o):
    if o == '*':
        return (a * b)
    elif o == '+':
        return (a + b)
    return (a - b)

def solution(expression):
    answer = 0
    operations = itertools.permutations(['*', '+', '-']) # 식 우선
    parsing = []
    stack = []
    num = ''

    # 문자열 -> 정수, 연산자로 분리
    for e in expression:
        if e not in ['*', '+', '-']:
            num += e
        else:
            parsing.append(num)
            num = ''
            parsing.append(e)
    parsing.append(num)

    # 우선순위 높은 순으로 게산
    flag = 0
    for operation in operations:
        tmp = parsing
        for o in operation:
            stack = []
            for i, p in enumerate(tmp):
                if p == o:
                    a = int(stack.pop())
                    b = int(tmp[i + 1])
                    stack.append(calculate(a, b, o))
                    flag = 1
                else: 
                    if flag == 1:
                        flag = 0
                        continue
                    stack.append(p)
            tmp = stack
        if answer < abs(stack[0]):
            answer = abs(stack[0])
        stack = []

    return answer